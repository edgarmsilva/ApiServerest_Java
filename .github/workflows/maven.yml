# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Api Serverest Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Allure CLI
        run: |
            wget https://github.com/allure-framework/allure2/releases/download/2.13.8/allure-2.13.8.tgz
            tar -zxvf allure-2.13.8.tgz
            sudo mv allure-2.13.8 /opt/allure
            sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Run with Maven
        run: mvn clean test

      - name: Generate report
        run: allure generate output/allure-results -o allure-report --clean

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Test marketplace action
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: output/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Publish report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: target/report